import type { Prisma, PrismaClient } from "@prisma/client";
import { BaseService } from "./../base-service";

import { {{camelCase action}} } from "./{{kebab-case action}}";


export class {{pascalCase model}}Service extends BaseService {
  constructor(prisma: PrismaClient) {
    super(prisma);
  }

  async {{camelCase action}}(data: any) {
    await this.beforeAction("{{camelCase action}}", data);
    const result = await {{camelCase action}}(this.prisma, data);
    await this.afterAction("{{camelCase action}}", result);
    return result;
  }

  // <AUTO-GENERATED METHODS>

  protected async beforeAction(action: string, data: unknown) {
    super.beforeAction(action, data);
    // Custom logic specific to {{pascalCase model}}Service
  }

  protected async afterAction(action: string, result: unknown) {
    super.afterAction(action, result);
    // Custom logic specific to {{pascalCase model}}Service
  }
}



