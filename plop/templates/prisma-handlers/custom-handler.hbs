"use server";

import { Response } from "@/server-actions/types/response";
import { {{pascalCase model}}ServiceImplementation ,{{pascalCase model}}ServiceReturnType} from "@/services/prisma/{{kebab-case model}}/{{kebab-case model}}-service";
import prisma from "@/shared/lib/prisma";
import {
  failure,
  failureWithFieldErrors,
} from "@/server-actions/utils/response";

export const {{camelCase action}}Handler = async (

): Promise<
  Response<
    {{pascalCase model}}ServiceReturnType<"{{camelCase action}}">,
  >
> => {
  try {
    const {{camelCase model}}Service = new {{pascalCase model}}ServiceImplementation(prisma);
    return { success: true, data: await {{camelCase model}}Service.{{camelCase action}}(undefined) };
  } catch (error) {
   return failure(error)
  }
};

// End of handler